<?xml version="1.0" encoding="UTF-8"?><!-- SQL 맵퍼 파일은 XML이기 때문에 제일 먼저 XML 선언이 옵니다. -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Mapper 인터페이스의 패키지명과 이름을 namespace 로 설정합니다. -->
<mapper namespace="com.naver.myhome.mybatis.mapper.BoardMapper">
	<!-- 
		1. 태그에 id 속성은 Mapper 인터페이스에 사용된 메서드 명과 동일하게 작성됩니다.
		2. resultType 속성은 Mapper 인터페이스에 사용된 메서드의 반환 타입을 작성해줍니다.
		3. 별칭은 대소문자 구분하지 않습니다.
	 -->
	 <select id="getListCount" resultType="int">
	 	select count(*) from board
	 </select>
	 
	 <!-- 
	 		문법 오류
	 		where rnum >= #{start}
	 		==> 해결법
	 		1. where rnum &gt; = #{start}
	 		2. where rnum <![CDATA[ >= ]]> #start
	 		
	 		==>설명
	 		1. HTML 문서는 '<', '>' 와 같은 마크업 문자들을 파싱해서 읽어들이는 구조입니다.
				그래서 마크업 문자들을 작다(<), 크다(>)로 사용하기 위해서 
				'&lt;', '&gt;' 등의 escape 문자열(escape character)을 이용해야 합니다.
				
				< : &lt;
				> : &gt;
			
			2. CDATA(Character DATA) - XML 파서가 분석하지 않는 문자 데이터를 의미합니다.
					사용하는 방법은 <![CDATA[ 와 ]]> 사이에 문자들을 넣으면 됩니다.	 		
				단점: 동적쿼리 사용 시 전체를 문자열로 판단하여 불편함이 발생 
					- https://tadaktadak-it.tistory.com/113				
	  -->
	  <select id="getBoardList" resultType="board">
	  	select *
	  	from ( select rownum rnum, b.*
	  		   from (select board.*, nvl(cnt, 0) cnt 
	  		   		 from board left outer join (select board_num, count(*) cnt
	  		   		 								from COMMENTS
	  		   		 								group by board_num) c
	  		   		 on board.board_num = c.board_num
	  		   		 order by BOARD_RE_REF desc, BOARD_RE_SEQ asc) b 
	  		   where rownum &lt;= #{end}  		 
	  		 )
	  	where rnum &gt;= #{start} and rnum &lt;= #{end}
	  </select>
	  
	  <!-- 
	  		1. jdbcType=VARCHAR : 첨부 파일을 추가 하지 않은 경우 에러 처리해 줍니다.
	  			해당 필드가 null인 경우 jdbcType=VARCHAR로 처리하면 null로 설정됩니다.
	  			예) #{BOARD_FILE, jdbcType=VARCHAR}
	  				#{BOARD_ORIGINAL, jdbcType=VARCHAR}
	  		
	  		2. ① insert 전에 (order="BEFORE")
	  					조회(select nvl(max(BOARD_NUM),0)+1 from board) 합니다.
	  		   ② 조회한 값을 keyProperty="BOARD_NUM"에서 설정한 대로 
	  		   	 "BOARD_NUM" 프로퍼티에 저장합니다.
	  		   	 (public void setBOARD_NUM(int BOARD_NUM))
	  		   ③ insert문의 #{BOARD_NUM}는 지금 구한 값을 BoardBean에서 가져옵니다.
	  		     (public String getBOARD_NUM() {return BOARD_NUM;})
	   -->
	   <insert id="insertBoard">
	   		<selectKey resultType="int" order="BEFORE" keyProperty="BOARD_NUM">
	   			select nvl(max(BOARD_NUM),0)+1 from board
	   		</selectKey>
	   		insert into board
	   		(BOARD_NUM,
	   		 BOARD_NAME, BOARD_PASS, BOARD_SUBJECT,
	   		 BOARD_CONTENT, BOARD_FILE, BOARD_ORIGINAL,
	   		 BOARD_RE_REF, BOARD_RE_LEV, BOARD_RE_SEQ, 
	   		 BOARD_READCOUNT, 
	   		 BOARD_DATE)
	   		 values
	   		 (#{BOARD_NUM},
	   		  #{BOARD_NAME}, #{BOARD_PASS}, #{BOARD_SUBJECT},
	   		  #{BOARD_CONTENT}, #{BOARD_FILE}, #{BOARD_ORIGINAL},
	   		  #{BOARD_NUM}, #{BOARD_RE_LEV}, #{BOARD_RE_SEQ}, 
	   		  #{BOARD_READCOUNT},
	   		  sysdate)
	   </insert>
	   
	   <update id="setReadCountUpdate">
	   		update board
	   		set    BOARD_READCOUNT=BOARD_READCOUNT+1 
	   		where  BOARD_NUM=#{number}
	   </update>
	   
	   <select id="getDetail" resultType="board">
	   		select * 
	   		from   board
	   		where  BOARD_NUM=#{number}
	   </select>
	   
	   <select id="isBoardWriter" resultType="board">
	   		select * from board
	   		where    BOARD_NUM = #{num}
	   		and      BOARD_PASS= #{pass}
	   </select>
	   
	   <update id="boardModify">
	   	 update board
	   	 set 
	   			BOARD_SUBJECT=#{BOARD_SUBJECT},
	   			BOARD_CONTENT=#{BOARD_CONTENT},
	   			BOARD_FILE=#{BOARD_FILE},
	   			BOARD_ORIGINAL=#{BOARD_ORIGINAL}
	   	 where  BOARD_NUM=#{BOARD_NUM}
	   </update>
	   
	   <update id="boardReplyUpdate">
	   	update board 
	   	set	   BOARD_RE_SEQ = BOARD_RE_SEQ+1
	   	where  BOARD_RE_REF = #{BOARD_RE_REF}
	   	and	   BOARD_RE_SEQ <![CDATA[ > ]]> #{BOARD_RE_SEQ} 
	   </update>
	   
	   <insert id="boardReply">
	   		<selectKey resultType="int" order="BEFORE" keyProperty="BOARD_NUM">
	   			select nvl(max(BOARD_NUM),0)+1 from board
	   		</selectKey>
	   	insert into board
	   		(BOARD_NUM, BOARD_NAME, BOARD_PASS, 
	   		 BOARD_SUBJECT, BOARD_CONTENT, 
	   		 BOARD_RE_REF, BOARD_RE_LEV, BOARD_RE_SEQ, 
	   		 BOARD_READCOUNT, BOARD_DATE)
	   		 values
	   		 (#{BOARD_NUM}, #{BOARD_NAME}, #{BOARD_PASS}, 
	   		  #{BOARD_SUBJECT}, #{BOARD_CONTENT},
			  #{BOARD_RE_REF}, #{BOARD_RE_LEV}, #{BOARD_RE_SEQ}, 
	   		  #{BOARD_READCOUNT}, sysdate)
	   </insert>
	   
	   <delete id="boardDelete">
	   	<![CDATA[
	   		delete from board
	   				where BOARD_RE_REF =  #{BOARD_RE_REF} 
	   				and   BOARD_RE_LEV >= #{BOARD_RE_LEV}
	   				and   BOARD_RE_SEQ >= #{BOARD_RE_SEQ}
	   				and   BOARD_RE_SEQ <= (nvl((SELECT min(board_re_seq)-1  
	   									        FROM   BOARD
	   									        WHERE  BOARD_RE_REF = #{BOARD_RE_REF}
	   									        AND    BOARD_RE_LEV = #{BOARD_RE_LEV}
	   									        AND    BOARd_RE_SEQ > #{BOARD_RE_SEQ}),
	   									       (SELECT max(board_re_seq)
	   									        FROM   BOARD
	   									        WHERE  BOARD_RE_REF = #{BOARD_RE_REF})))  
	   	]]>
	   </delete>
	   
	   <select id="getDeleteFileList" resultType="String">
	   		select board_file from delete_file
	   </select>
	   
	   <delete id="deleteFileList">
	   		delete delete_file
	   		where board_file = #{file_name}
	   </delete>
</mapper>